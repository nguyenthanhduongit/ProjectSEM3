@model ProjectSEM3.DAL.Models.Entity.Product

@{
    ViewBag.Title = "Create";
    Layout = "~/Areas/Admin/Views/Shared/LayoutAdmin.cshtml";
}

@using (Html.BeginForm("Create", "Product", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <section class="content-header">
            <div class="container-fluid">
                <div class="row mb-2">
                    <div class="col-sm-6">
                        <h1>Create Product</h1>
                    </div>
                    <div class="col-sm-6">
                        <ol class="breadcrumb float-sm-right">
                            <li class="breadcrumb-item"><a href="/Admin/Home">Home</a></li>
                            <li class="breadcrumb-item active">Create Product</li>
                        </ol>
                    </div>
                </div>
            </div><!-- /.container-fluid -->
        </section>
        <div class="card card-primary">
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="form-group">
                @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.TextAreaFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Images, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Images, new { htmlAttributes = new { @class = "form-control", @type = "file" } })
                    @Html.ValidationMessageFor(model => model.Images, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.price, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.price, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.price, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                
                <label class = "control-label col-md-2">Type Product </label>
                <div class="row">
                    <div class="col-md-1 col-sm-1"></div>
                    <div class="form-check col-md-3 col-sm-3">
                        <input class="form-check-input" type="radio" checked="checked" name="StatusProduct" id="StatusProduct" value="0" />
                        <label class="form-check-label" for="flexRadioDefault1">
                            Product New
                        </label>
                    </div>
                    <div class="form-check col-md-3 col-sm-3">
                        <input class="form-check-input" type="radio" name="StatusProduct" id="StatusProduct" value="1" />
                        <label class="form-check-label" for="flexRadioDefault1">
                            Product Seller
                        </label>
                    </div>
                    <div class="form-check col-md-3 col-sm-3">
                        <input class="form-check-input" type="radio" name="StatusProduct" id="StatusProduct" value="2" />
                        <label class="form-check-label" for="flexRadioDefault2">
                            Product Recently
                        </label>
                    </div>
                </div>
            </div>
            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    @Html.ActionLink("Back to List", "Index", null, new { @class = "btn btn-default" })
                    <input type="submit" value="Create" class="btn btn-primary" />
                </div>
            </div>
        </div>
    </div>

}

<script src="~/Content/ckeditor/ckeditor.js"></script>
<script>
    CKEDITOR.replace("Description");
</script>
